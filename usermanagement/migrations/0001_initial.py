# Generated by Django 5.2.3 on 2025-06-12 17:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="JustPackUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name_farsi",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "last_name_farsi",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Agn", "Agn"),
                            ("Pax", "Pax"),
                            ("SuperAdmin", "Super Admin"),
                            ("AdminStaff", "Admin Staff"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Active", "Active"),
                            ("Warned", "Warned"),
                            ("Limited", "Limited"),
                            ("Suspended", "Suspended"),
                            ("Deactivated", "Deactivated"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("limit_activity_until", models.DateTimeField(blank=True, null=True)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("nid", models.CharField(blank=True, max_length=16, null=True)),
                ("iban_number", models.CharField(blank=True, max_length=24, null=True)),
                ("dc_number", models.CharField(blank=True, max_length=16, null=True)),
                ("bank", models.IntegerField(blank=True, null=True)),
                ("cell_number", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "emergency_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "whatsapp_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "telegram_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "instagram_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("token_version", models.IntegerField(default=0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "All User",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="OTPLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=100)),
                ("otp", models.CharField(max_length=5)),
                ("created_at", models.DateTimeField()),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AgnUser",
            fields=[
                (
                    "justpackuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("office_id", models.CharField(blank=True, max_length=200, null=True)),
                ("address", models.CharField(blank=True, max_length=300, null=True)),
                ("website", models.CharField(blank=True, max_length=300, null=True)),
                ("legal_name", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "manager_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "manager_cell",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "manager_email",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "manager_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="manager_images/"
                    ),
                ),
                ("manager_id", models.CharField(blank=True, max_length=50, null=True)),
                ("land_line", models.CharField(blank=True, max_length=300, null=True)),
                ("whatsapp", models.CharField(blank=True, max_length=300, null=True)),
                ("telegram", models.CharField(blank=True, max_length=300, null=True)),
                (
                    "counter_name",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "logo_img",
                    models.ImageField(blank=True, null=True, upload_to="agent_logos/"),
                ),
                (
                    "lcn_a_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="agent_licenses/"
                    ),
                ),
                (
                    "lcn_b_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="agent_licenses/"
                    ),
                ),
                (
                    "lcn_j_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="agent_licenses/"
                    ),
                ),
                (
                    "lcn_p_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="agent_licenses/"
                    ),
                ),
                ("lcn_number", models.CharField(blank=True, max_length=300, null=True)),
                ("lcn_expires", models.DateField(blank=True, null=True)),
                ("user_acceptance_to_publish_data", models.BooleanField(default=False)),
                (
                    "guarantee_file",
                    models.FileField(
                        blank=True, null=True, upload_to="guarantee_files/"
                    ),
                ),
                ("iban", models.CharField(blank=True, max_length=24, null=True)),
                ("card_no", models.CharField(blank=True, max_length=16, null=True)),
                ("approval", models.BooleanField(default=False)),
                ("note", models.TextField(blank=True, max_length=1000, null=True)),
            ],
            options={
                "verbose_name": "Agn User",
            },
            bases=("usermanagement.justpackuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PaxUser",
            fields=[
                (
                    "justpackuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "id_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="id_pax_user_image/"
                    ),
                ),
                ("username_id", models.CharField(blank=True, max_length=24, null=True)),
                (
                    "passport_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="passport_images/"
                    ),
                ),
                (
                    "passport_number",
                    models.CharField(blank=True, max_length=24, null=True),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("date_of_birth", models.DateTimeField(blank=True, null=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "emergency_contact_number",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("is_head", models.BooleanField(default=False)),
                (
                    "place_of_birth",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "solar_date_of_birth",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("day", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("year", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "father_name",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
            ],
            options={
                "verbose_name": "PAX User",
            },
            bases=("usermanagement.justpackuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
